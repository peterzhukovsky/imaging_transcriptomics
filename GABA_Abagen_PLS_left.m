clear
load('C:\Users\peter\Documents\GABA\AHBA\leon_output.mat', 'ROI_names');
microarray=readtable('C:\Users\peter\Documents\GABA\AHBA\abagen_expression_left.csv');
probes_sorted=microarray.Properties.VariableNames; probes_sorted(1)=[]; microarray=microarray{:,:};microarray(:,1)=[];
%make sure brainstats are sorted by HCP rois
%brainstats=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\stats_for_Allen.xlsx');
ROI_names_cut=ROI_names.Var1(~isnan(microarray(:,1)));
%mean_MS=[-0.0290087051785363,0.0197057587898730,0.00966789708753623,-0.00526507662625629,-0.000719306235647021,0.0137447570562952,-0.0803778490046122,-0.0288416232088867,0.0416047756566597,-0.000346630882743477,0.0413952083200876,0.0451444464333807,-0.0602529310560675,0.0285488314688671,0.0139996774532397,0.0406453720513280,0.0210053751940451,-0.0522120407927187,-0.0696664903349481,0.0443375415899430,0.0362054542644312,-0.0280949420672574,-0.0620489218360334,0.0326730394838490,0.0463323604006556,0.0359577378155775,-0.0692974782714843,-0.00744827211809391,0.00574040814933122,-0.0120133809712913,-0.00314393644840777,-0.0266783926105578,-0.0483446633640475,-0.0223159460814233,-0.0264770511243185,-0.0448492976735805,-0.0188185312304111,0.0331030568247514,-0.0443525563623587,-0.0306509877050955,0.0149490511407889,-0.0352885442270769,0.00938785245203784,0.0203979753276009,-0.0397690846844377,-0.0457040819566097,0.0295557133631239,0.0175849559692392,-0.0502081815154768,-0.0634282605417267,-0.0476659302572744,-0.0338461656867892,-0.00499944473326185,-0.00302297408272020,0.0228292637568879,0.0251771610554263,0.0388632940278127,0.0285684165726810,-0.0318580217324772,-0.00710133716745810,0.0238932508821806,-0.0392636000921923,0.0397430509855554,-0.0519961676625110,0.0420669536078129,0.0426893141104459,0.0325995743897439,-0.0223482364743858,0.0180158444794088,-0.00341279833846150,-0.00105249083802738,0.0484045912320773,0.0434871774520254,0.0362884757091899,0.0272978104157558,0.0236481038494213,0.0101810024787917,-0.0323752059167815,0.0258167877171477,0.0296199540839500,0.0374183804216639,-0.0225750804324228,0.0240503364802994,0.0496194755239738,0.00202739187584359,-0.0328540390155363,-0.0222213065841506,-0.0276682326980462,0.0116592879361922,-0.000522470747332688,-0.0236095324184400,0.0175275801111039,0.0427612866289887,0.0319509972693903,0.00173881443942120,-0.0269828719467331,0.0307950183831525,0.0213663415884248,0.0229328375301082,-0.0641151335183239,0.0499694316065345,0.0532814349139431,0.0395291979835034,-0.0162828184399004,0.0353905811549113,0.0374773100604818,0.0283319394953978,0.0261070607756711,-0.0193024809361596,-0.0381767342841188,-0.00888162634952862,-0.00214456284832748,-0.0162825998623062,0.0183567333434624,0.0439189618540829,-0.0679344659377498,0.0232377391323031,-0.0605156525552200,-0.0435310019276710,-0.0570530165262781,0.0108648722136849,-0.0598720410582184,0.0254352163451872,0.00944068346629549,0.0302168243220924,-0.0465626390926698,-0.0211121933703965,0.000756400018009339,0.0356372052002533,0.0385301557302602,0.0283307730429531,0.0270748457838722,0.0252763990633655,0.0194607646353950,-0.0528547198310429,-0.00597227851112285,0.00199783326377734,0.00944738610381209,0.0216093506157604,0.00516790594924450,0.0257597131015354,0.0452459617069821,-0.0192841178447652,-0.000479054923636462,0.0405962636216791,0.00679063312694734,-0.0168908733933127,0.0101841205793938,-0.0222373727671479,0.0310745169171504,0.0207866397693573,-0.00215753378459039,0.00229330695695556,-0.0499240852483738,-0.0617213951648823,-0.0118349803502595,-0.0433126308625302,-0.0455229643021164,0.0148109092932351,-0.00240580424738902,0.0121946364502483,0.0186853752687495,-0.0753830010219475,0.0433666153866639,-0.0757882132747795,-0.0443598095705016,0.00252468218907615,0.0241066755203402,-0.0711839825290864,-0.0626431746845693,0.0363357476169105,0.0229113728912552,-0.0281263781139888,0.000192113793566075,0.0456243743022721,-0.00678577209969884,0.0289483074308863,0.0238289082197464,0.0454973980532478,0.0334783992484597,0.00129080501582258,-0.00441167446105212,0.0108643924302962,0.00695774447091205,-0.0101675452302413,0.0426818284258047,-0.0762308888888353,-0.0264297329762471,0.0395528664794285,-0.0129466716193792,0.0372720746903262,0.0444035368523353,-0.0588221220892242,0.0300807548714272,0.0201868126203349,0.0394535150371395,0.0105798388823086,-0.0525082446693720,-0.0641074935532777,0.0415833786801877,0.0181127155816737,0.0315403247516027,-0.0636755099187135,0.0370381566699126,0.0449300139364620,0.0275601317987928,-0.0690334158706149,-0.00780773126311930,0.0260259482568356,-0.0249827374584655,-0.0172676981091687,-0.0339309242976273,-0.0441969082917911,-0.0230274830186632,-0.0323780223755798,-0.0421031419855143,-0.0444880358082874,0.0227853401858181,-0.0347170356981166,-0.0257922091841986,0.0145215925307146,-0.0416528017159314,0.00824917777654543,0.0169990754250523,-0.0443731161797927,-0.0464690118142203,-0.0211159312067230,0.00240885101569309,-0.0492955336409086,-0.0658722750496578,-0.0174340614241178,-0.0558261557537495,-0.0223546017593601,0.00463033358663953,0.0346343697119977,0.0315992848232915,0.0404789829190004,0.0353292419134974,-0.0375924006948659,0.00980217342365550,0.00286460857583633,-0.00571740698409733,0.0402919926776352,-0.0545689050970282,0.0422757985181305,0.0454483247597845,0.0242838223730315,-0.0354956204222823,0.0291770497752305,-0.00764437268813683,-0.0116575711600358,0.0384424634429909,0.0448390692164277,0.0408240233370760,0.0399651186247225,0.0159065867339906,0.0289297360256358,-0.0186882830191175,0.0333745730830032,0.0340185433331901,0.0295670925777145,-0.00761333606848948,-0.00667666234637806,0.0527720969795410,0.00553485680823903,-0.0404375187309643,-0.0291610845791967,-0.0286113680421798,0.0304171203448089,-0.00423055062142892,-0.0251071228956055,0.0195709239845103,0.0457332947503734,0.0233757136045581,0.0212791426206033,-0.0339849337063282,0.0370858142146566,0.0197481665111640,0.0326311238383233,-0.0605498058459884,0.0508627560372932,0.0467508412789176,0.0207773051992959,-0.0217538487739458,0.0328360968905322,0.0357237520071993,0.0278452462297003,0.0282521589077153,0.00257895810412111,-0.0466020520645958,0.0228242272320417,0.000348084074968809,0.00913695473342254,0.0136191256448394,0.0476911988173046,-0.0700088247913317,0.0323437979833612,-0.0501658708368359,-0.0208057231148278,-0.0576769207636914,-0.0271405448684192,-0.0532218798021444,0.0272641251816752,-0.0128076970991313,0.0430298631543144,-0.0282114718303239,-0.0107624172188651,-0.0117928860620484,0.0323386097928224,0.0400779055665386,0.0115901319236665,0.0352433907945073,0.0279731734414792,0.0150600462857791,-0.0608477880396238,0.00182924722172657,0.0114201598422247,0.0160755090041040,0.00267025950750164,0.000371106989640088,0.0303700588312083,0.0332427665721853,0.0113537453921480,0.0287340662578937,0.0442612909648937,-0.00723484829016541,-0.0164240435638073,-0.00176936541883217,0.00988637657830708,0.0206600980258869,0.0246240424008787,0.0174665057123968,0.0217222449891991,-0.0465926213532984,-0.0595704334006531,-0.0259250689112016,-0.0435316630981604,-0.0440222858719650,0.0135090744543552,-0.0380300621228556,-0.00866909548234290,0.00753975956845185,-0.0735969593299647,0.0463537483668397,-0.0747733247678195,-0.0489688613507089,0.0125243512441816,0.0196752185481687,-0.0700392414649309,-0.0637217469190283,0.0424870651361062,0.0175946697007884,-0.0326867045498206,0.0137773072590095,0.0451924159469070,-0.0103853036193637,0.0249458848417729,0.0108699784062437,0.0392715626706918,0.0232141111661692]';
nan_idx=isnan(microarray(:,1));
load('C:\Users\peter\Documents\GABA\reports\cort_outputs.mat');
load('C:\Users\peter\Documents\GABA\reports\subcort_outputs.mat');%_surf_2023

clear X Y Rsq* randomSample permutation_index p p_1 s*
X=microarray; X(nan_idx,:)=[];   
    %X=vertcat(X,X); 
    X=zscore(X); 
Y=c3vs1_tstat'; Y(nan_idx)=[]; Y1=c3vs1_tstat';  Y1(nan_idx)=[]; 
Y=c3vs1_tstat(:,5); Y(nan_idx)=[]; Y1=c3vs1_tstat(:,1);  Y1(nan_idx)=[]; 
%Y=mean_MS(1:180); Y(nan_idx)=[]; Y1=mean_MS(181:360);  Y1(nan_idx)=[]; 
    %Y=vertcat(Y,Y1);   
    Y=zscore(Y);
permutations=5000;   
allobservations=Y; 

clear  Rsq Rsq1 p p_1
for ncomp=1
    
    parfor n = 1:permutations
    % selecting either next combination, or random permutation
    permutation_index = randperm(length(allobservations));
    % creating random sample based on permutation index
    randomSample = allobservations(permutation_index,:);
    % running the PLS for this permutation
    [XL,YL,XS,YS,BETA,PCTVAR,MSE,stats] = plsregress(X,randomSample,ncomp);
    Rsq1(n) = sum(PCTVAR(1,:));
    Rsq(n) = sum(PCTVAR(2,:));
    end
    [XL,YL,XS,YS,BETA,PCTVAR,MSE,stats] = plsregress(X,Y,ncomp);
    p(ncomp)=1-sum(sum(PCTVAR(2,:))>Rsq')/permutations % the 2nd row is Y variance
    p_1(ncomp)=1-sum(sum(PCTVAR(1,:))>Rsq1')/permutations % the first row is X variance
end; 

ncomp=1
[XL,YL,XS,YS,BETA,PCTVAR,MSE,stats] = plsregress(X,Y,ncomp);PCTVAR

%for info: XL = (XS\X0)' = X0'*XS; while XS = X0*W 
PLS1w=stats.W(:,1);
%PLS2w=stats.W(:,2);

%% Bootstrapped gene weights
bootnum=5000;
PLS1weights=[];
PLS2weights=[];
dim=1
parfor i=1:bootnum
    i;
    myresample = randsample(size(X,1),size(X,1),1);
    res(i,:)=myresample; %store resampling out of interest
    Xr=X(myresample,:); % define X for resampled subjects
    Yr=Y(myresample,:); % define X for resampled subjects
    [XL,YL,XS,YS,BETA,PCTVAR,MSE,stats]=plsregress(Xr,Yr,dim); %perform PLS for resampled data
      
    newW=stats.W(:,1);%extract PLS1 weights
    if corr(PLS1w,newW)<0 % the sign of PLS components is arbitrary - make sure this aligns between runs
        newW=-1*newW;
    end
    PLS1weights=[PLS1weights,newW];%store (ordered) weights from this bootstrap run
    
   
    %newW=stats.W(:,2);%extract PLS2 weights
    %if corr(PLS2w,newW)<0 % the sign of PLS components is arbitrary - make sure this aligns between runs
    %    newW=-1*newW;
    %end
    %PLS2weights=[PLS2weights,newW]; %store (ordered) weights from this bootstrap run    
end

PLS1sw=std(PLS1weights');
geneweights1=PLS1w./PLS1sw';

probes_with_weights=table; 
probes_with_weights.symbol=probes_sorted';
probes_with_weights.geneweights=(geneweights1);
%probes_with_weights=sortrows(probes_with_weights,2, 'descend');

%% 
figure; scatter(XS, Y, 10, 'filled', 'k'); hold on;%    histogram(microarray(:,tmp));   %
corr(XS, Y)
tmp3=[ones(length(Y),1), XS]; b = tmp3\Y; yCalc = tmp3*b; plot(XS,yCalc,'--', 'LineWidth',2);hold off; clear tmp*
ylim([-3 4])
%% visualising the gene-gene associations:

genes={'OPRM1', 'OPRK1', 'OPRL1'}; %'PTGER3'
%genes=vertcat(probes_with_weights.gene_symbol(1:5), probes_with_weights.gene_symbol(15144:15148));
figure;
for i=1:length(genes)
tmp=strcmp(probes_sorted, genes{i});
subplot(3,1,i);   scatter(X(:,tmp), Y, 10, 'filled', 'k'); hold on;%    histogram(microarray(:,tmp));   %
%tmp=strcmp(probes_sorted.gene_symbol, 'OCLN');
tmp2=corr(X(:,tmp), Y); 
tmp3=[ones(length(X(:,tmp)),1), X(:,tmp)]; b = tmp3\Y; yCalc = tmp3*b; plot(X(:,tmp),yCalc,'--', 'LineWidth',2);hold on
xlabel(strcat(genes{i}, ': R=', num2str(tmp2))); xlim([-3 3]);
end; clear tmp*

%% permutation distribution
figure(2); histogram(Rsq, 30); xlim([0.02 0.3])






%% grouping the genes 
genes={'GABRA1','GABRA2','GABRA3','GABRA4','GABRA5', 'GABRB1', 'GABRB2', 'GABRB3'}; %, 'GABRG1','GABRG2','GABRG3','GABRE','GABRD'
tmp=[];
for i=1:length(genes)
t=strcmp(probes_sorted', genes{i});
tmp=[tmp, t];
end
tmp=sum(tmp')';

[~,scores,~]=pca(X(:,tmp==1));
t=corr(X(:,tmp==1), scores(:,2))
genes(t>0.5)
t=corr(X(:,tmp==1), scores(:,1))
genes(t>0.7)

corr(X(:,tmp==1))

%% gene groups:

genes={'OPRM1', 'OPRK1'};tmp=[];for i=1:length(genes); t=strcmp(probes_sorted', genes{i}); tmp=[tmp, t]; end; tmp=sum(tmp')';
genemaps(:,1)=mean(X(:,tmp==1)')';
genes={'GABRA2', 'GABRA3', 'GABRA5', 'GABRB1', 'GABRB3'};tmp=[];for i=1:length(genes); t=strcmp(probes_sorted', genes{i}); tmp=[tmp, t]; end; tmp=sum(tmp')';
genemaps(:,2)=mean(X(:,tmp==1)')';
genes={'GABRA1', 'GABRA4', 'GABRB2'};tmp=[];for i=1:length(genes); t=strcmp(probes_sorted', genes{i}); tmp=[tmp, t]; end; tmp=sum(tmp')';
genemaps(:,3)=mean(X(:,tmp==1)')';
genes={'CORT', 'SST', 'NPY'};tmp=[];for i=1:length(genes); t=strcmp(probes_sorted', genes{i}); tmp=[tmp, t]; end; tmp=sum(tmp')';
genemaps(:,4)=mean(X(:,tmp==1)')';


%% difference maps and how they map onto gene maps 

demo=readtable('GABA_Data_for_Peter.xlsx');
load('globalsubFC.mat')
subjects=table(subjects);
subjects.Properties.VariableNames={'SubjectID'};
demo=innerjoin(demo, subjects);
globalsubFC(globalsubFC==0)=NaN;
mean_fd(mean_fd==0)=NaN;
subcort_rois={'L_accumbens', 'L_amygdala', 'L_caudate', 'L_hippocampus', 'L_putamen',...
              'R_accumbens', 'R_amygdala', 'R_caudate', 'R_hippocampus', 'R_putamen'};
cort_rois=readtable("HCPMMP1_on_MNI152_ICBM2009a_nlin.txt");
d=vertcat(demo, demo);

s=5
baseFC=globalsubFC(:,s,:,1);
diffFC=globalsubFC(:,s,:,4);%-globalsubFC(:,1,:,1);
diffFC=diffFC-baseFC;diffFC=reshape(diffFC,[129, 180]);diffFC(:,nan_idx==1)=[];

%doublecheck the pls results 
corr(nanmean(diffFC)', genemaps)
subjxgenec=corr(diffFC', genemaps); %load("globalFC.mat"); diffFC=globalfFC(:,:,4)-globalfFC(:,:,1); diffFC=reshape(diffFC,[129, 180]);diffFC(:,nan_idx==1)=[]; subjxgenec=corr(diffFC', genemaps);
scatter3(subjxgenec(:,1),subjxgenec(:,3), subjxgenec(:,4))
figure; for i=1:4;subplot(2,2,i); histogram(subjxgenec(:,i)); end
histogram2(subjxgenec(:,1),subjxgenec(:,4), 30)

Xg=[subjxgenec(:,1),subjxgenec(:,2),subjxgenec(:,3),subjxgenec(:,4)];k=3
GMModel = fitgmdist(Xg,k,'RegularizationValue',0.001)
%figure; y = [zeros(129,1)];y=demo.group; h = gscatter(Xg(:,1),Xg(:,2),y);
%hold on; gmPDF = @(x,y) arrayfun(@(x0,y0) pdf(GMModel,[x0 y0]),x,y); g = gca; fcontour(gmPDF,[g.XLim g.YLim]) 
%title('{\bf Scatter Plot and Fitted Gaussian Mixture Contours}'); legend(h,'Model 0','Model1'); hold off

P = posterior(GMModel, Xg); 
[~,Yg] = max(P,[],2);
figure; y=Yg;
h = gscatter(Xg(:,1),Xg(:,2),y);
hold on; gmPDF = @(x,y) arrayfun(@(x0,y0) pdf(GMModel,[x0 y0]),x,y); g = gca; fcontour(gmPDF,[g.XLim g.YLim]) 
title('{\bf Scatter Plot and Fitted Gaussian Mixture Contours}'); legend(h,'Model 0','Model1'); hold off


cortisol_full=[demo.T1_cort, demo.T2_cort, demo.T3_cort, demo.T4_cort, demo.T5_cort, demo.T6_cort,demo.T7_cort,demo.T8_cort, demo.T9_cort];
%cortisol_full=[demo.T3_VAMS_relten, demo.T4_VAMS_relten, demo.T5_VAMS_relten, demo.T6_VAMS_relten,demo.T7_VAMS_relten,demo.T8_VAMS_relten];

figure; plot(nanmean(cortisol_full(Yg==1,:)));hold on; plot(nanmean(cortisol_full(Yg==2,:)));hold on; plot(nanmean(cortisol_full(Yg==3,:))); hold on; plot(nanmean(cortisol_full(Yg==4,:)));

anova1(demo.T3_cort,Yg)
ixmdd=strcmp(demo.group, 'MDD'); ixhc=strcmp(demo.group, 'HC'); figure; plot(nanmean(cortisol_full(ixmdd,:)));hold on; plot(nanmean(cortisol_full(ixhc,:)));



diffCort=demo.SHAPS_MRIvisit_total;
corr(subjxgenec, diffCort, 'rows', 'pairwise')

diffCort=demo.MASQ_total;
corr(subjxgenec, diffCort, 'rows', 'pairwise')

ixx=zeros(1, length(subjxgenec(:,2)));
ixx(subjxgenec(:,2)>0.1)=1;
ixx(subjxgenec(:,2)<-0.1)=-1;
anova1(demo.T4_VAMS_relten-demo.T3_VAMS_relten, ixx)

corr(nanmean(diffFC(ixx==1,:))', genemaps)
histogram(diffFC(:,171))

scatter(nanmean(diffFC(ixx==1,:))', nanmean(diffFC(ixx==-1,:))')
scatter(nanmean(diffFC(ixx==1,:))', nanmean(diffFC(ixx==0,:))')
scatter(nanmean(diffFC(ixx==-1,:))', nanmean(diffFC(ixx==0,:))')

tmp(:,1)=nanmean(diffFC(ixx==1,:));tmp(:,2)=nanmean(diffFC(ixx==0,:));tmp(:,3)=nanmean(diffFC(ixx==-1,:));
imagesc(tmp)


%% linking to Howard 2019 (102 genes need to translate RS to ENSEMBL OR symbol)
%d=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\GWAS_meta_102_genes_MDD\ensemble_genes.txt');
d=readtable('C:\Users\peter\Documents\GABA\previous_genes\GWAS_meta_102_genes_MDD\fullHowardTable.csv');
Howard=unique(d.gene_symbol); clear Howard_weight %(strcmp(d.MatchAcrossStudies_, 'TRUE'))

%% TRD genes
%Howard={'ACADSB–HMX3';'MON1B';'SRPK1–SLC26A8';'CNTN1';'GRIK4'; 'BDNF'; 'SLC6A4';'KCNK2'}; % from Fabri: GRIK4, BDNF, SLC6A4, and KCNK2
Howard={'ACADSB–HMX3';'MON1B';'SRPK1–SLC26A8';'CNTN1';'GRIK4'; 'BDNF'; 'SLC6A4';'KCNK2';'GPRIN3'; 'SNCA';'BAZ1A';'PROK1';'KCNA10'; 'API5'; 'CSMD1'; 'EGFLAM'; 'TOP3B'; 'VPREB1'; 'SMEK1'; 'LIPG'; 'ACAA2'; 'GLTSCR1'; 'LPPR4'; 'PALMD';'SPSB4'; 'USMG5' ;'FAM136A'; 'TGFA'; 'APBB2';'SCN3B'; 'ZNF202'; 'TFAP2D'; 'FAM98A'; 'MYADML'; 'DPP10'; 'RHOU RAB4A';'RNF24'}
%% Somatostatins from Anderson et al 2020 PNAS
Howard={'CORT';'SST';'NPY'};%'SSTR1';'SSTR2';'SSTR3'}; %{'SSTR1';'SST';'SSTR2';'SSTR3'};SST, CORT, NPY
%% Liao genes
Liao_plus=readtable('C:\Users\peter\Documents\GABA\previous_genes\Liao\DataS1PLS_liao_plus.xlsx');
Liao_minus=readtable('C:\Users\peter\Documents\GABA\previous_genes\Liao\DataS1PLS_liao_minus.xlsx');
%% Anderson 2020 pnas genes
Anderson=readtable('C:\Users\peter\Documents\GABA\previous_genes\Anderson\pnas.2008004117.sd01.xls');
%% ageing genes - Lu didnt match well
%Downregulated following Lu T, Pan Y, Kao SY, Li C, Kohane I, Chan J, Yankner BA. Gene regulation and DNA damage in the ageing human brain. Nature. 2004 
down_genes={'ATP2A2';'ATP2B2';'ATP6V1A';'ATP6V1G2';'B3GALNT1';'CACNB2';'CDK5R1';'CHGB';'CLTB';'CNTN1';'DYNC1I1';'FAM49A';'FGF12';'FGF13';'FRMPD4';'GAD1';'GFRA2';'GNAQ';'GRIA1';'INPP4A';'KCNJ9';'KIF1B';'LOC552889';'MAP2K4';'MBNL2';'MEF2C';'NR1D2';'NRXN1';'OGT';'PDE4D';'PTPRO';'PVRL3';'RAB6A';'RAP2A';'RBP4';'TGOLN2';'THY1';'TIMM17A';'TNFRSF21';'YWHAZ'};
up_genes={'ACAA2';'ACTL6A';'ADD3';'AFF1';'AHCYL1';'ALDH9A1';'ANP32B';'BAZ2B';'BMP7';'CALD1';'CAST';'CBS';'CLIC4';'COL4A5';'CPNE3';'CREB3L2';'DDIT4';'DHRS3';'EFHD1';'EFS';'FADS1';'FGFR2';'FGFR3';'GAB2';'GNG11';'GNG12';'HBB';'HEPH';'INHBB';'ITGAV';'ITGB1';'ITPKB';'LAMP2';'LITAF';'LRIG1';'LRP4';'LTBP1';'METTL7A';'MYO10';'NFE2L2';'NIPBL';'OGG1';'PDLIM3';'PLOD2';'PMP22';'PON2';'PRDX6';'RAP1B';'RGS20';'RHOBTB3';'SDC2';'SEPT10';'SERINC5';'SFRP1';'SNAP23';'SYPL1';'TLN1';'TMEM123';'TOB1';'TOR1AIP1';'TP53BP2';'TST';'UNG';'VAMP3';'WIPI1';'WWTR1'};
Howard=vertcat(down_genes, up_genes);
%% Alzhheimer's disease: https://www.medrxiv.org/content/10.1101/2020.10.01.20200659v2.supplementary-material
%Bellenguez_ADgenes=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\AD\gene_list_twas_t26.xlsx');
%Bellenguez_ADgenes(Bellenguez_ADgenes.x90__CredibleGeneSet~=1,:)=[];
%Bellenguez_ADgenes=unique(Bellenguez_ADgenes.Gene);
Bellenguez_ADgenes=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\AD\gene_list_t22.xlsx');
Bellenguez_ADgenes=unique( Bellenguez_ADgenes.Gene_name(str2double(Bellenguez_ADgenes.pvalue)<10e-7)  );
%% OUR CT UKB analyses
UKB_minus={'NMI';'CD38';'C2orf74';'RAP1GAP';'EFEMP2';'TAF9B';'SLC27A2';'LOC100287566';'MACROD2';'FNBP1L';'GPR125';'RAB13';'RPS10';'PET100';'ELMO2';'HSP90AB1';'GPI';'RAP2B';'ZC3H15';'PIGF';'GRAMD1C';'AP3M2';'NKD2';'AC013283.1';'RRAGB';'HSP90B1';'ODZ3';'ERBB2';'CYHR1';'CDC14A';'YKT6';'TRIL';'C1orf107';'EFR3B';'RPL29';'C21ORF119';'NR0B1';'AAED1';'CNDP2';'POLR3GL';'LY86';'C11orf65';'TUBA4B';'NLGN3';'SLC19A1';'C1orf52';'DNAH2';'FARP1';'LYPLAL1';'HRSP12';'ROM1';'PARVA';'VWCE';'PALLD';'CFDP1';'QPRT';'OPTN';'RP11-14N7.2';'MOCS2';'TSN';'CHMP2A';'GAMT';'COX16';'METTL5';'CMTM8';'RAB39';'CTNND2';'SLC8A2';'SMYD3';'ATBF1';'MRPS18C';'TMIE';'NDUFS6';'KLHL12';'CXorf40A';'DCTPP1';'SND1';'AL137229.4';'TMEM219';'RARRES3';'ZCWPW2';'LST1';'TMEM150C';'DBI';'OR14I1';'FXYD1';'NOL4';'MAPK1IP1L';'SH3GLB2';'TUFM';'DAK';'C10orf107';'CNTN6';'C6orf118';'DMD';'HES1';'C3orf39';'MAGIX';'FAM101B';'MAPK8IP1';'CCDC110';'DIRAS3';'WBP1';'PHB';'COCH';'PROCA1';'SYT4';'LRRN1';'BTBD10';'SLC25A18';'ACAT2';'HIST1H2BK';'ATP5J2';'CHRDL1';'ACSF2';'AP001816.1';'AKR1C1';'TRUB1';'PARD3B';'SEC24D';'PARP8';'CXXC11';'KCNB2';'SEMA3D';'GDPD2';'NEDD8';'ENPP1';'SUMO3';'GPM6B';'C14orf156';'METTL8';'DRAM1';'BCL11B';'PROSC';'SHC2';'ADCY7';'SURF1';'FAHD2A';'DRD5';'BCR';'IQCA1';'FAS';'TK2';'MRPS18A';'LASS1';'WIF1';'NIPSNAP1';'MAPK13';'APOO';'CYBB';'SRP19';'CABYR';'PJA1';'MARC2';'TPRG1L';'KPNA4';'AC011498.2';'LOC643856';'PSME1';'C7orf59';'ENKUR';'UBE2L6';'AC009365.1';'TFEC';'TSR2';'GLCE';'AL589182.2';'ETF1';'ENC1';'NHLRC1';'RALGPS2';'CCDC41';'AF205589.2';'TUBA1A';'MAGED4B';'B4GALT2';'C17orf58';'FAM149A';'GMIP';'PPAP2B';'AP2S1';'C16orf95';'APBA1';'HYI';'C9orf61';'GDE1';'PMPCB';'ZMAT1';'SPATA20';'KLHDC8A';'SSR4P1';'SBF1';'C1orf31';'P4HA2';'SRCRB4D';'DDN';'COL20A1';'TGFBI';'MYB';'KLRC4';'FBXL2';'RAPGEF1';'FLVCR1-AS1';'SOX9';'KIF3A';'MT1X';'BSPRY';'DPF1';'MEX3A';'ECHDC3';'MT3';'SNAP29';'STX4';'ANP32E';'EIF4EBP1';'UROS';'SOX11';'SIDT1';'WDR51A';'ZNF469';'C1QB';'ISLR2';'NR2E1';'CD99';'CSRP2BP';'ARHGAP25';'UBE2MP1';'MRPL37';'SDK2';'LOC730144';'NDST3';'HTR1E';'LSM3';'GSS';'C10orf46';'RAB32';'GRP';'CCDC102B';'TUBA1C';'TBCB';'LCMT1';'C1orf122';'C5orf55';'LRRC27';'CDC42';'TUBA3D';'RGS10';'EPHX1';'ERI3';'TBC1D26';'FAM127A';'RHBDD2';'SLC27A5';'OCA2';'ARHGAP23';'RPL12';'PIRT';'TMEM189';'RPL27A';'RP11-90D4.2';'VAT1';'UBE2A';'RSPH1';'DLEU1';'BFSP1';'TBC1D13';'SAMD4A';'AC073346.1';'CYB561';'TUBB4';'MOSC1';'TTC1';'NRP1';'C14orf23';'DCTD';'SLC35A2';'HSDL2';'NFATC1';'WDR6';'CBS';'RGL1';'TMEM17';'ACAA2';'PLCH1';'TMEM93';'KCTD6';'AGBL1';'SLC26A11';'C2orf73';'JAZF1';'SYT9';'ACTR1A';'PIM2';'TCTA';'PSME3';'PPDPF';'GAL';'FADS2';'TMEM59L';'PRR13';'NPY5R';'CLDN10';'C10orf114';'TMEM47';'HEBP1';'C20orf27';'TRAPPC2L';'CMTM4';'LOC100289341';'TMEM53';'FDFT1';'C21orf62';'SNUPN';'C6orf154';'MPHOSPH6';'LOC100288366';'NDUFAF1';'SMPD1';'LOC644662';'RAB7L1';'VWA5A';'UBE2MP1';'FLJ38379';'MT1M';'C12ORF75';'ACOX3';'NUDT16L1';'CTNNBIP1';'KLRC3';'TNFAIP8L1';'PTGES';'SKAP1';'RPH3AL';'BRMS1L';'PRDM16';'NOP16';'DHRS2';'CD68';'TMEM2';'IL34';'BAG3';'ADAMTS9';'BCHE';'MYBPC2';'RANBP3L';'ICAM5';'RASL10A';'RNF182';'TLCD2';'JMJD4';'HINT2';'GGCX';'DMRTC1B';'DNAJC12';'TMED10P1';'MRPL23';'LOC648603';'VPS35';'SEMA4F';'KRT17';'XPO6';'CROT';'STX7';'CARHSP1';'RSPH9';'TSPAN6';'GLUD2';'CDH13';'TUBA4A';'VAMP8';'HTR1A';'C1orf151';'ARHGAP18';'ACTN2';'CDH8';'EIF1';'KIAA1128';'FAM86B1';'ZNF572';'IGSF22';'VPS26B';'CDKN2AIPNL';'GALNTL5';'SAR1A';'C15orf24';'ANAPC11';'EMP3';'CCDC86';'LOR';'FAM166A';'MCFD2';'HMGCR';'CCNY';'DBNL';'MOBKL1A';'TDRKH';'AQP4';'TIMP4';'SELENBP1';'SHISA5';'ITGB8';'DDIT4L';'NETO2';'RIT1';'PLSCR4';'HMGCL';'SNTB1';'GBA';'NDST2';'FERMT1';'TUBA1B';'FAM47E';'GOSR2';'PPP2R5C';'RUNDC3A';'MGC23284';'AKAP8';'VANGL2';'PARD3';'FAM98A';'SLC2A12';'GRID2';'Z83851.1';'CDC34';'ACTR10';'CASQ1';'FAM117A';'SRRD';'CACHD1';'HSD17B14';'PRKAA2';'CREG2';'SAP18';'RAB34';'SRGAP1';'GNG12';'AC011479.2';'FAM171B';'LRSAM1';'PON2';'C11orf83';'CA10';'NDUFC2';'GDF1';'CDH11';'ARPC4';'SLC4A3';'CAMK1G';'SAMD15';'PITPNB';'SNRPB2';'ST6GALNAC6';'DYNC1I1';'USP9X';'PIGP';'DTNB';'C6orf26';'SNX2';'BAG2';'RRAGC';'ITPRIPL2';'RP11-178A10.1';'P2RY13';'HSD17B6';'ARL8A';'LMAN2L';'PTBP2';'SEC61A2';'UBE2S';'ZNF516';'SUMF1';'GPR143';'GBAP';'CTH';'C3orf31';'APBB1IP';'MMD2';'CETN3';'CSGALNACT1';'GPC4';'GPR177';'NQO1';'SCCPDH';'AC068020.3';'NAA10';'PAMR1';'ZNF497';'MORN5';'FAM131A';'SUSD3';'MT1E';'FTL';'PKIB';'ST20';'PDLIM5';'RAB31';'LOC100289263';'ME2';'STOML1';'AKR7A3';'PSMB6';'SCUBE2';'SLC44A3';'SNX3';'PLXNC1';'YJEFN3';'RBBP7';'NUDT2';'PDE2A';'KCNN2';'LOC100287347';'AL161668.2';'TUSC3';'ARPC3';'CLTCL1';'LYRM1';'C21orf56';'PCYT2';'AP3S2';'LOC400027';'LOC653513';'MT2A';'MORN4';'NTNG2';'STYXL1';'IDH2';'TXNRD3';'ATP5G1P5';'ATOX1';'MMP28';'PMM1';'EFCAB11';'TNFRSF14';'RIT2';'CD99P1';'GPT2';'MED16';'SLC7A11';'AKD1';'LOC729859';'BYSL';'TRPV2';'CALML3';'PTHLH';'GRM1';'GPR56';'USP5';'ZSWIM7';'ALK';'CDT1';'PSMC3';'PCYT1B';'MRPL20';'C19orf50';'GRAMD4';'PKP3';'CX3CR1';'CNTNAP3B';'AC079776.2';'ABHD12B';'CGREF1';'ACTA1';'TRH';'ITGB1BP1';'DAD1';'RP11-544M22.1';'RHOJ';'PBXIP1';'BEX2';'HTR7';'MRPS25';'DHX58';'C1orf93';'ABHD2';'FGFBP3';'STBD1';'C19orf70';'UBE2Z';'GPC5';'FAM107A';'ESD';'SQRDL';'BHMT2';'MINA';'NUDT17';'SLCO1C1';'GUK1';'GNAI2';'RP11-431H16.2';'LENG4';'MYH7';'SLC39A12';'SNX10';'GRM3';'MT1A';'CLPB';'TMEM158';'NAV3';'FAM26F';'EMC3';'SLC2A4RG';'FCGBP';'FOLR2';'NUDT18';'EVI1';'SPHKAP';'AIF1';'TRIM22';'RHOC';'CHRNB1';'ATP5I';'WSB2';'VTI1B';'TMEM106C';'TMEM9';'RDBP';'CCDC3';'SEC63';'DZIP3';'AC026369.2';'PDGFA';'C1orf128';'MAPK11';'ADAP2';'BLVRB';'ADAMTS19';'OPRM1';'CCKBR';'YWHAH';'ZNF229';'TBC1D24';'SSR4';'TMEM238';'RAB8B';'ASB1';'DHCR24';'GXYLT2';'MR1';'MPI';'PTCHD1';'KIAA1244';'BBOX1';'CMTM7';'ENOX2';'GSTM3';'HCST';'CPAMD8';'ACOT2';'BAIAP2L2';'AK5';'DAP';'CLU';'PPIL6';'CCDC68';'CYP26A1';'PCDH15';'MRC1L1';'KLHL35';'TLR3';'SMCR7L';'COL16A1';'KAL1';'MGMT';'FSIP1';'PDLIM3';'FAM162A';'EMID1';'DYX1C1-CCPG1';'CASP1';'PTS';'LOC100287038';'CCNYL1';'FGD3';'S100A16';'LARP1';'MESDC2';'TCP10L';'LOC728392';'SLC30A10';'PLEKHC1';'TATDN1';'FAM181A';'A1BG';'WRB';'SCAPER';'RESP18';'POLR2G';'ZSCAN5A';'MT1B';'PLS3';'ASS1';'CRLF1';'PSMB7';'BCL7C';'RIC8A';'C6orf225';'DPH5';'C12orf53';'C6orf126';'C1orf230';'TP53BP2';'HLA-DMB';'HEYL';'PCDH21';'RRP7B';'MRAS';'MRPS16';'IDS';'COPS4';'AKR1C3';'VSIG4';'STOX1';'MRPS33';'PRRG3';'ALDH2';'ASL';'IGFBP5';'E2F3';'CCT5';'CKS1B';'PTPRA';'C19orf10';'PSMD4';'RAC2';'CCDC90A';'POLR3C';'MAFG';'HSDL1';'C21orf70';'DUSP9';'SYN2';'ACSL4';'NECAB2';'EYA2';'TXNL4A';'FAH';'LOC100131785';'COG1';'ONECUT1';'COL11A1';'RSU1';'ARRB2';'PEX19';'NPY1R';'MPV17L2';'MT1F';'PEG10';'MECR';'TMEM164';'MTCH1';'CHMP1A';'C12orf76';'GRB14';'LY86-AS1';'PSTPIP1';'SRM';'CREB3';'C2orf69';'VAV1';'SSBP1';'PLXNA1';'PEMT';'CPLX3';'HSPB11';'LOC100287988';'CCNH';'UBL5';'CEBPA';'NSMCE1';'CCDC52';'CACNA1H';'TMEM136';'UMPS';'FAM207BP';'NLE1';'AC093734.11';'C1QL2';'C21orf67';'C12orf23';'CCDC112';'HPCAL1';'SCRG1';'CBLN1';'TAF10';'JUN';'MEA1';'GINS2';'KCTD15';'AKR7L';'EFEMP1';'TMEM200A';'NR1H3';'C5orf33';'WDFY4';'MTPN';'CDO1';'TBCA';'MTHFS';'C10orf116';'PYDC1';'MT1G';'SLC39A10';'LOH12CR2';'LOC644563';'SGSH';'CD6';'ZNF219';'DOK4';'PTRH2';'DHRS4';'SST';'SH3BGR';'CISD3';'C21orf34';'MLEC';'FIBIN';'ZDHHC12';'C9orf9';'SLC16A2';'MESP1';'P2RX5';'PRR5';'TFPT';'AC007688.2';'TRAPPC6A';'PMVK';'ROBLD3';'ALDH9A1';'ADAMTSL3';'ZMYND12';'TMEM120A';'DENR';'CAPZB';'LRRC16B';'PNPLA3';'KLRC2';'TRIM27';'SLC1A4';'BRK1';'TMEM196';'PTPRF';'ANXA8';'FIGNL2';'DIO2';'PSMB1';'GABARAP';'LAMA1';'SLC17A8';'LUZP2';'EDNRB';'STK25';'DNAJC2';'OAZ2';'GALM';'RNASEK';'RAB3C';'FDPS';'MT1L';'HN1';'ECHS1';'CCDC103';'LDHA';'WDR54';'MED10';'FDX1L';'SPRY1';'RNF150';'C2orf80';'DSEL';'C3orf78';'FABP3';'AC010087.3';'DKK3';'FLRT1';'LOC150519';'HGF';'NIP7';'LINC00461';'C9orf117';'RABL5';'NMNAT3';'MIR7-3HG';'GNB2';'KIAA1024';'UBXN8';'PYCR1';'EDARADD';'FBXO2';'NSFL1C';'CORT';'RNASEH2C';'DOC2A';'LYPD1';'LRP1B';'PGRMC1';'ME1';'ZNF642';'MAGED1';'MDK';'SCN9A';'CCDC148';'FTH1P20';'C1QA';'NBL1';'ACOT8';'GLRA3';'ABI1';'FAM102B';'ARMCX1';'SH3RF1';'CFD';'KCNG3';'SMAD3';'ARMCX2';'PTRHD1';'HRAS';'GMFB';'PYGL';'SLC22A18';'TUBB2C';'GNG4';'CMAS';'SNHG8';'SPATA18';'TMEM130';'PAX6';'TP53TG1';'MYH15';'SC4MOL';'MYRIP';'C2orf84';'SIL1';'VSTM2L';'CRYZ';'C3orf14';'STARD3NL';'C20orf112';'LMO1';'LOC727938';'VAT1L';'HPCAL4';'AKR7A2';'TM2D3';'ACCN1';'RTDR1';'CPNE6';'MPP6';'LOC100289600';'MIF';'AP003108.2';'NUTF2';'B9D1';'NFKBIE';'PTRH1';'PLAC9';'PRDX1';'CHMP4A';'RPS27AP11';'SNCG';'GPRIN2';'RP4-783C10.1';'GLOD4';'CNR1';'DYNLL1';'LOC642852';'FABP5P3';'GGCT';'CNTNAP3';'HSPB3';'NPY';'NTSR2';'WDR23';'LOC391722';'ACTC1';'DCLK2';'TDRD9';'METTL6';'SLC25A23';'SH2D5';'CANX';'RTBDN';'RP11-60I3.5';'FABP5';'STK32C';'HES4';'KCNMB2';'DNAJC25-GNG10';'IL17RD';'POTEKP';'PIK3CD';'KLK5';'DYRK2';'DNAJA4';'KIF17';'KLF8';'GCNT1';'LOC100129309';'MAGEH1';'MYL5';'TAC1';'ARHGAP12';'UCHL1';'GMFG';'PNCK';'OBFC2A';'JAKMIP1';'LOC100292909';'RRP7A';'YPEL1';'TMEM42';'CORO1A';'SPON2';'TSPAN18';'SEPW1';'CDKN2D';'LRRC2';'CHST15';'CENPF';'DLG2';'LOC392145';'RABL4';'SP5';'PDGFC';'KCTD12';'ADCY2';'VPS37D';'RSPO4';'BCKDK';'MYL12B';'KCNK2';'TM7SF2';'RSPO3';'ACTG1';'MNF1';'OPRK1';'FILIP1';'AP000654.2';'LINC00087';'ARMET';'DCAKD';'ST6GALNAC5';'NT5DC2';'PACRG';'CMTM1';'VBP1';'LINC00260';'THRA';'RNF181';'PPM1M';'MOXD1';'WDR16';'TTLL1';'TPST1';'RNASET2';'TXN';'MEIS3P2';'GPR68';'GTF3C6';'ARHGDIG';'RAVER2';'RP11-529I10.1';'FTHL16';'C3orf26';'PNPLA4';'SOX5';'LIX1';'C9orf119';'ADRB2';'ISOC1';'ARL15';'MUM1L1';'CDC42SE2';'ROBO1';'C6orf173';'AP3S1';'SNRNP27';'DHCR7';'VIT';'STYK1';'ARMC10P1';'GRIA1';'LINC00086';'RIPK2';'C17orf61';'TMEM176A';'CDH4';'ZFP64';'PSORS1C1';'TMEM208';'C17orf108';'S100A13';'TMEM176B';'TPM3';'PRDX4';'NEUROD6';'UFC1';'HSD11B1L';'FKBP1A';'NUPR1';'TSPAN33';'KIF21B';'ZNF350';'C16orf55';'FABP7';'HSBP1';'CACNG3';'CIB1';'FRMPD2';'GOLM1';'IFI27L2';'C12orf73';'KIRREL2';'ASCL2';'CNN3';'EFHC2';'RP11-33N16.1';'WTIP';'GGTA1';'TG';'ETFB';'LOXL1';'CAPG';'RGS20';'RTP1';'C17orf89';'CTD-2536I1.1';'ATOH7';'GDF10';'HRASLS';'SQLE';'ENO1';'GRIN3A';'MBOAT2';'TUBB8';'GLRA2';'LMO3';'ARMC10';'TUBB2B';'STK17A';'TNNT1';'ZNF831';'PDGFRA';'PSENEN';'SLC35F2';'TIMM10';'SNX7';'CYB5D2';'AC069234.1';'TUBB7P';'CDH10';'ZCCHC12';'LOC100128737';'CD83';'FZD2';'SNTG2';'PKIA';'LOC442308';'WFDC1';'C6orf1';'RP3-410C9.1';'RASAL1';'SVOP';'CHID1';'XYLT1';'PLCB2';'LOC100288743';'GTF2F2';'CDH9';'PTGER3';'PGM2L1';'KCNN3';'NAGK';'RP11-566K11.2';'PYCRL';'CXorf57';'LRRN2';'SCN3B';'PCSK5';'GNG2';'HBQ1';'UHMK1';'SARNP';'FXYD6';'AK3L1';'UCHL3';'MAPK3';'KLHDC8B';'CLEC4G';'TMTC1';'MYBPC1';'RILPL2';'TMEM54';'MAOB';'C14orf129';'SFTPD';'ADRA1B';'IDNK';'PRMT2';'DYRK3';'POLR2L';'CIB2';'PCDH17';'NIPSNAP3A';'WDR86';'TMEM108';'ZCCHC17';'DTNBP1';'CPNE7';'SNCA';'BRE';'DDAH2';'C6orf129';'COG5';'LOC646627';'CCDC90B';'SSSCA1';'IMPACT';'HMGCS1';'GNB4';'MDGA1';'CALM3';'NIT2';'SLN';'LDHD';'ROBO2';'SLA';'FZD1';'EMG1';'RASGEF1C';'F12';'ST5';'NUDT10';'CNIH2';'TMSB4X';'GDA';'DDAH1';'GAP43';'TUBB';'C1S';'NOV';'AGXT2L1';'LOC339524';'FAM113B';'AC010980.2';'LOC100287080';'C11orf66';'HRH1';'PSD3';'EFNB2';'SKAP2';'CD63';'PRSS23';'NDP';'IL33';'NANOS1';'NKAIN2';'NKAIN3';'MSANTD1';'ENOX1';'SCGN';'NUDT11';'CYB5R1';'SMARCD3';'DNAH14';'GABRA5';'C16orf93';'NKAIN4';'BIRC3';'SLIT3';'KLK7';'LARGE';'TMSB10';'PPEF1';'FKBP1B';'FAM150B';'DAPL1';'LRRC3B';'MMD';'AC005152.2';'NUDT14';'FAM120AOS';'PHPT1';'LOC653051';'UG0898H09';'LOC100288911';'KLK10';'LOC100131482';'FAM71F1';'DOK6';'ANO3';'SLC7A4';'WDR66';'FADS3';'RAB36';'AC015936.3';'SCPEP1';'CETN2';'TMEM159';'CREM';'PPP4R4';'CRIP2';'LOC100287146';'ANKRD50';'TUBB2A';'SUB1';'SH3BGRL3';'C1QL1';'AMIGO2';'C1orf50';'ATP2B4';'TCEA3';'ARHGDIA';'CTXN1';'CHCHD6';'POLE4';'SLIT1';'DACH2';'SULF2';'TIMM8B';'BATF3';'FGGY';'GABRB1';'LOC100131504';'PID1';'PEA15';'PCDH20';'SSTR2';'C8orf46';'C1orf95';'LY6H';'LYRM2';'NT5DC3';'PCBD1';'ANKRD6';'KIAA1644';'EFCAB1';'AC044839.2';'LRRC36';'BPHL';'C5orf49';'PRKCG';'FAM148C';'C12orf45';'TMEFF2';'PRKCD';'FAM65B';'MGST1';'C6orf52';'GABRA3';'RAB27B';'DPYSL3';'BAIAP3';'SSTR1';'RBP4';'WNT10B';'TRIM36';'LOC643037';'AC006273.1';'SYT17';'KCNMB4'};
UKB_plus={'HS3ST1';'HIST1H1D';'ST3GAL6';'CUX1';'CMYA5';'LYSMD4';'IL28RA';'DPY19L2';'VSTM2A';'TRPC3';'PLK5P';'RORA';'FAM110A';'TIAM1';'NAALAD2';'TMEM145';'FSTL1';'RP11-403C10.2';'NCOA3';'DCBLD2';'RORB';'TMEM132E';'PENK';'EPB41';'RP5-1022P6.1';'GPLD1';'VAV3';'GLCCI1';'C8orf47';'PLAGL1';'EMX1';'KCNT1';'ZIM2';'KCNAB3';'KLF9';'CTSC';'NR1D1';'ZADH2';'PCDH7';'EYA4';'DBC1';'ATP2B2';'NTNG1';'RGPD1';'DMKN';'HIVEP2';'TTC39C';'MKNK2';'SEMA6D';'STRC';'LRRC49';'SPTSSB';'ESRRG';'SPSB2';'ZMAT4';'SLC25A37';'COL5A1';'RSPO2';'MIAT';'FGF18';'OSBPL6';'LRRK2';'ASB13';'NR1D2';'LOC100286909';'CENPJ';'TTC21B';'DPY19L2P4';'FBLN7';'INTS8';'C1orf71';'ZNF385B';'CARD9';'VCX';'CDC42EP3';'CHRM2';'GRIN2A';'CNTNAP5';'AHI1';'SLC44A5';'CTNNAL1';'KIAA1199';'PKD2L2';'RADIL';'VIPR2';'MAP3K13';'TTC39B';'N4BP2';'PANK1';'ARID3B';'FRAT1';'CORO6';'PHF17';'AC110760.2';'PDIA5';'SDR16C5';'EHD2';'CACNB4';'PCDH11X';'THSD4';'SRPK1';'FAM71E1';'PKNOX2';'OSBPL5';'DPY19L2P2';'JAK2';'CADPS2';'GPR137C';'C4orf49';'GPR161';'RASD2';'THAP10';'MTBP';'MC1R';'EIF2A';'C19orf46';'IDE';'BCL11A';'ZNF165';'PCDH11Y';'BHLHE22';'VCX2';'ANK1';'LOC727799';'STARD10';'SLC39A14';'ZNF268';'UPP1';'KIAA1456';'FAM19A2';'LOC100132261';'SLC25A12';'MYO19';'SOCS5';'TCHP';'OVGP1';'HIST1H4A';'FOXO3';'NIPAL2';'PION';'OIP5-AS1';'EEPD1';'DPT';'ITM2A';'ACSL3';'AGPAT9';'FLRT3';'FAM20A';'CNNM1';'CDH7';'OSBP2';'TRERF1';'AMMECR1';'ZNF295';'SEMA5B';'SETBP1';'LOC100288893';'LINC00473';'LEPREL2';'GABRA1';'TCF7L2';'PPP3CC';'PHYH';'NR3C2';'RASSF4';'FAM13B';'KIAA1107';'C18orf25';'ICA1';'ARHGAP10';'C14orf106';'IPW';'SLC4A9';'STAG1';'SGK494';'JAM2';'ZNF718';'THSD7A';'TSHZ1';'KIAA0802';'CUX2';'NFIL3';'TMEM38A';'PPL';'C20orf74';'LOC100131471';'AKAP7';'L2HGDH';'KIAA1370';'MEF2A';'JDP2';'INTS4L2';'ZCCHC8';'SERTAD4';'SLITRK3';'EGR1';'HSPA4L';'SEMA7A';'GABRG2';'DIS3';'HTR1F';'CCNO';'PRR16';'HIST1H4E';'STS';'PKD1';'SSX2IP';'DCP1A';'AS3MT';'DGCR8';'LRFN5';'C6orf186';'CITED2';'ACPL2';'MRGPRF';'FBN1';'RAPGEF6';'ANKRD34C';'IGDCC3';'STARD5';'PDE7A';'PRMT7';'LOC100289350';'ABCB10';'PRC1';'LAMA3';'AR';'RPS6KA3';'ETV6';'AC135983.8';'BHLHE40';'GSDMB';'PCDHGB4';'SLC24A4';'ZSWIM4';'PLAGL2';'BBS7';'PIK3CB';'CFC1';'YPEL4';'DUS1L';'SLC16A7';'TMEM86B';'PCDHGA3';'CRABP1';'TSHZ3';'KIAA1875';'DCUN1D2';'FOXP1';'MOGAT2';'RP11-504P24.4';'LOC730658';'CHGA';'ZYX';'COX7A1';'RFPL1';'SEPT7L';'ZSCAN12';'ARPP-21';'ATG16L1';'TAS2R43';'CCDC152';'CPNE9';'EXTL2';'GPHN';'HRH2';'BACH2';'ZNF30';'ODZ2';'CCDC136';'PIP5KL1';'DLG5';'CDS1';'CPT1B';'KCNB1';'CPLX1';'FNDC5';'C1orf133';'SORBS3';'C1RL';'MET';'ZNF193';'GGA2';'STAT4';'SPTB';'A2BP1';'CCDC57';'SCN1A';'MTAP';'FOXP2';'RNF144A';'PPIL5';'CAMK2B';'TAS2R31';'SLC17A6';'AP000926.2';'C7orf63';'RPGR';'NEIL1';'GUCA2B';'C6orf47';'TIFA';'RAD54B';'WDR19';'EPHA3';'TUBE1';'CIT';'PTPN2';'INADL';'KIAA0240';'TDRD6';'SLC9A5'};

%% OUT SENDEP CT analyses
SENDEP_CT_minus={'ATPAF2';'PPIG';'EML2';'CHD1L';'LOC285359';'C6orf120';'TMEM49';'KCNC4';'KCNS3';'PCDH7';'ZFYVE19';'RORB';'TMEM132C';'NSMAF';'VASH2';'MIER3';'TNKS';'IQUB';'JAK2';'XYLT2';'CENPJ';'IER5';'RC3H1';'SLC36A1';'LARP4';'FAM57B';'KIAA0430';'CDK2AP1';'SENP6';'EMCN';'GZF1';'HERPUD1';'UBA3';'LRRC49';'ARL2BP';'KLHL15';'POLR2F';'PRMT10';'EHMT1';'MYO1E';'C9orf3';'PFN1';'VILL';'IL1RAP';'ACSL3';'ACYP2';'SLC4A9';'C6orf106';'CS';'OBFC1';'PRH2';'DNM3';'NUP160';'DPY19L2P4';'C20orf74';'AP000926.2';'EFCAB7';'NDUFS1';'CLEC2L';'SNRNP35';'NET1';'KRTAP9-4';'SECISBP2';'LGI2';'SFTPA1';'FECH';'AFF1';'MRPL16';'PREPL';'TANC1';'EHD2';'P2RX6P';'UBL3';'CA7';'SPEF2';'EIF4E3';'SHROOM2';'ZDHHC17';'GATAD2A';'SUCLA2';'ISCA1';'GRAMD1B';'RAB3GAP2';'SDHAP1';'CEP192';'ZFP161';'TTC39C';'RASL11A';'CAMTA2';'ZNF136';'PREP';'CASP3';'C19orf61';'SLC15A4';'CREBZF';'MIA3';'UBE2D1';'DTWD2';'RCL1';'TRIM52';'PGBD4';'IGLON5';'ARHGEF18';'C3orf58';'PHTF1';'SRSF1';'FES';'ADAM22';'PRKCA';'GPR85';'CCR10';'ALS2CR4';'MAFB';'SLC22A23';'SIPA1L3';'ZNF654';'ATP11B';'C1orf162';'SEC14L5';'AC013402.2';'NIPA1';'ERRFI1';'AHI1';'NOP2';'SLC5A6';'CCDC64B';'ADSSL1';'FBXL4';'PIK3CA';'REEP6';'BAG5';'GK';'KCNS2';'SOCS5';'FOXN3';'NAALAD2';'NFIX';'CEP97';'VPS54';'ZKSCAN4';'HSPB6';'LANCL1';'MNS1';'LRRC37A16P';'KIAA0427';'CASP2';'AMD1';'ATP1B1';'NFKB1';'KSR2';'HDHD1A';'ANKRD34C';'RERE';'MYC';'PALB2';'ARHGEF11';'ANKRD37';'ARRDC3';'PAQR9';'TAS2R50';'C6orf47';'DND1';'GPR89B';'AP003115.1';'STEAP2';'SLC25A15';'MAP3K9';'ARNT';'YOD1';'LOC283788';'SPARCL1';'CA13';'PAR5';'SCP2';'CPEB3';'FAM20A';'SLC25A5P1';'MAP3K13';'FAM131B';'PIKFYVE';'AC110754.1';'LMBR1';'PDCL';'CCDC57';'LOC728743';'METAP2';'ULK3';'C9orf5';'FAM119A';'OSBPL2';'IQSEC1';'ZBTB7A';'GIN1';'IL17RE';'COQ3';'AS3MT';'PI4K2A';'PLEKHF1';'EML5';'ATP6V1E2';'XKR9';'ZNF385B';'DCPS';'SPHK1';'MRPL39';'CORO7';'C5orf56';'HS3ST5';'JRK';'PLXNA4';'WDR70';'HAR1A';'RP1-21O18.1';'ESAM';'RP11-206L10.11';'ATF4';'IGLL1';'WIPI1';'IRS1';'GABRG2';'MBTD1';'FGD5';'TMEM204';'BMS1P5';'ZNF383';'TMEM41B';'MTP18';'SCLT1';'MLLT10';'NEFM';'LIF';'GRIN2A';'LPCAT4';'OXSR1';'EIF4E1B';'MRPL33';'GNRH1';'RP11-422J8.1';'BTBD11';'H1F0';'LOC100133161';'UBAP1';'USP54';'FUT11';'TIAM1';'BCL3';'ATP1A3';'PRR16';'KIAA1033';'ATP1A1';'EML6';'STAT4';'PCGF1';'GFRA2';'TMCC2';'FAM135B';'ARID4B';'C4orf49';'TMEM188';'FAM43A';'FAM126B';'ACTN4';'KCNA3';'SPG20';'QRFPR';'DPT';'PCDHB16';'VWC2';'KITLG';'RNF6';'CABLES2';'PURA';'ZNF718';'SACM1L';'IQSEC3';'ALDH1B1';'MGST2';'AAAS';'SETDB1';'ZNF547';'CAPS2';'MTDH';'ING3';'CRKRS';'PAXIP1';'PYROXD1';'MTUS2';'VAV3';'UTP15';'APIP';'RMND5A';'NKX3-1';'DOK3';'WDYHV1';'ARHGAP26';'MKX';'LOC401357';'GPR146';'RERGL';'NGLY1';'RSRC1';'RPS6KB2';'SLC35B4';'SENP7';'FZD6';'ALS2';'ZNF557';'HIVEP2';'SLC19A2';'CDADC1';'LYSMD4';'GABRA1';'CALCOCO1';'C14orf83';'FRMD5';'ERCC4';'KCNQ5';'C4orf22';'TSNARE1';'CACNG7';'PEX3';'AP4E1';'KCNK12';'AC024560.3';'TRIM37';'PIK3CB';'TRPT1';'SPHK2';'LYNX1';'MUDENG';'SLC38A9';'C3orf18';'CDC42BPA';'IGLL3P';'TUBGCP5';'NR2C1';'CEP120';'ZBED4';'KIAA1797';'COX17';'GOLGA8C';'KIAA0182';'GFM1';'MRPL48';'USP13';'MMP15';'IFIT5';'DDX3Y';'SLC25A36';'ABHD13';'CFL2';'FNDC4';'ZNF490';'MAGEL2';'GPR137C';'CCDC82';'NCKIPSD';'MC1R';'CLEC16A';'GLRX2';'PMEPA1';'APOL2';'TMPPE';'AARD';'TAS2R31';'CUGBP2';'KRR1';'TTBK2';'PARD6B';'GABRD';'GRPEL2';'FASTKD5';'NXPE3';'MUTED';'CHIC1';'OSBP2';'RNF157';'MREG';'SAPS3';'BRP44L';'PCDH12';'C20orf39';'NFKBIZ';'SH3BGRL';'PFTK1';'ZNF165';'TMEM132E';'TAF4B';'BCO2';'DCAF13P3';'FDX1';'BTN2A2';'NFIL3';'ATRNL1';'MSL2';'DPP8';'SDHC';'REPIN1';'ST6GALNAC1';'NEK1';'TMEM14C';'PLA2R1';'GTF2A1';'PPP1R3D';'ADAMTS5';'XKR6';'OGDHL';'HELB';'ANKRD20A5P';'FAM115C';'EMB';'MRPS30';'PANX2';'CACNG8';'TLE2';'LINC00473';'INTS4L2';'LOC100288083';'C8orf31';'THAP2';'AC068353.1';'SLC20A2';'KIAA0564';'RCC2';'DCLRE1A';'RILP';'STXBP5L';'HAGHL';'SYT12';'TCF7L2';'HCN2';'C14orf138';'ZNF555';'SLC25A40';'SH3D20';'CCDC58';'SMC2';'TAS2R45';'ENTPD4';'PPP1R3B';'HECA';'SCLY';'CAST';'CAMTA1';'ATP2A2';'GDPD1';'NUDT8';'ATP13A3';'MGC27345';'SLC25A5';'SEMA6D';'LOC100133150';'TRMT2B';'RFPL1';'HTATIP2';'RNF168';'HOXD9';'FAM123B';'ABCC8';'STRBP';'ZNF496';'HRC';'COL7A1';'PAQR3';'CHRD';'ROCK2';'B3GALNT2';'TBC1D30';'NAPEPLD';'SLC25A17';'TMEM81';'ZNF175';'RANBP17';'MAT2B';'DPY19L2';'CYB5R4';'MTMR2';'MFAP3';'TNF';'SDSL';'MED11';'CFC1';'INSIG2';'PLCB1';'C1orf201';'LOC100131471';'ATP8B2';'FAM35B';'LOC149837';'AIFM3';'HIST1H1D';'HCN1';'EPM2AIP1';'IDE';'MAP3K7IP3';'ZNF394';'SLITRK3';'CPSF1';'KCTD9';'FAM76B';'SERTAD4';'CAB39';'RCAN2';'TAS2R30';'PDSS1';'KCNJ3';'SRPK1';'TTC39A';'PLCL1';'CDKN1B';'TRMT61B';'TAS2R5';'MCM3AP-AS1';'MYO19';'TSEN15';'CLK4';'TRAK2';'CCBL1';'KCNH6';'GK3P';'SLC25A37';'HISPPD1';'MBNL2';'C2orf86';'COQ10B';'PRSS56';'ZBTB34';'ALG2';'ZNF143';'STS';'C6orf211';'PANK1';'ZFYVE9';'C1RL';'P2RX6';'GPR108';'MKNK2';'GALR1';'CCL27';'MITF';'AC100803.1';'ASAP2';'GIGYF1';'PLAGL2';'CHGA';'DDX3X';'C10orf97';'OVGP1';'RPS6KB1';'SNHG1';'MYSM1';'ATP1A4';'C9orf72';'AK2';'SLC39A13';'ZMAT4';'USP31';'C5ORF62';'CRISPLD1';'PPIEL';'GLS2';'C1orf66';'COG2';'MCF2L-AS1';'KCNC3';'PCP4L1';'CLEC4M';'CITED2';'KIAA1107';'KRTAP5-2';'SRFBP1';'PRIM1';'BCAT1';'PIF1';'KCNT1';'FBLN7';'MOGAT1';'KIAA0408';'FAM49B';'MADCAM1';'CD99L2';'ZNF295';'DND1P2';'PTPN12';'ZNF385A';'PCSK1';'TBC1D19';'KIAA1586';'CSDC2';'KREMEN1';'ZFYVE28';'C12orf35';'FAM190A';'HS3ST1';'RAPGEF6';'HSPBAP1';'CLVS2';'ZNF782';'PDIK1L';'OSBPL1A';'DDX11';'C10orf140';'AC126544.1';'LOC100129104';'EXTL2';'ARHGAP9';'FKBP5';'HES6';'DCAF8L2';'PFKFB2';'SMARCD2';'KTELC1';'CORO6';'SCN4B';'SEPT7L';'CLK3';'KIAA1841';'ITPR1';'C17orf75';'PPP1R28';'SLC35A4';'OR2L3';'SAV1';'SORBS3';'NRIP2';'CCDC126';'DDHD2';'STK38L';'SPSB2';'HOMER3';'SOHLH1';'ELOVL4';'FLT3';'ABTB2';'NT5M';'FCHSD1';'FAM78A';'PIM1';'ZNF365';'MPP1';'SSH3';'TRPM3';'DPY19L2P2';'ACPL2';'FLJ23867';'ATP2B3';'LRRC4';'KLF9';'RFX5';'LOC493754';'SLCO4A1';'PPP3CC';'PLCD4';'STARD5';'NAT8L';'SLC45A4';'UCHL5';'LOC100288939';'CABP1';'LGI3';'NCK2';'SGK494';'MOGAT2';'C5orf13';'PSMD6';'MCF2';'C18orf25';'CDKN2C';'ECM1';'ARID5B';'PECR';'OIP5-AS1';'CMYA5';'GUCA2B';'RELL2';'NEXN';'TAS2R14';'B4GALT6';'MRS2';'RIMKLA';'ATP2B2';'MYH7B';'HSD11B1';'CASP8AP2';'LEAP2';'CPT1B';'ALX3';'PPTC7';'ACSL6';'ZADH2';'NARS';'PTPN2';'LOC642513';'EPN3';'NEFH';'AR';'TPTE2P6';'DMKN';'TBC1D4';'ABCB10';'BHLHE40';'EFHA2';'STAG3L4';'KLHL24';'ADO';'DCP1A';'CERK';'LCA5';'NT5DC1';'PIP5KL1';'ELOVL7';'SERPINB9';'INA';'DEXI';'HTR1F';'MTAP';'KCNS1';'NIPAL2';'SLC25A12';'LOC100289861';'NFIC';'FSTL1';'LEPROTL1';'C6ORF228';'KBTBD3';'STRC';'KIAA0802';'STARD9';'ACVR1C';'SLC47A1';'ZBTB16';'FANCI';'TAS2R43';'PNKD';'GSTT1';'LOC730658';'ANKH';'POU6F1';'RICTOR';'C19orf46';'KCNA2';'HR';'LAPTM4B';'DENND1B';'SLC24A2';'HAPLN4';'FER1L4';'KCNAB3';'PELI3';'SLC38A11';'MTRF1';'LYPD5';'C12orf24';'PPIL3';'SETD7';'FASTKD1';'KIAA1370';'RET';'FBXO32';'LOC100288893';'STRADA';'RPGR';'RHOBTB2';'PLEKHH3';'ZNF273';'GLCCI1';'ST3GAL6';'IPW';'SORL1';'NR3C1';'CCDC39';'CCNI';'FNDC5';'SEPT12';'LINC00515';'SLC38A1';'SHD';'SV2C';'LRRC37A4P';'ANK3';'CADPS2';'SPTSSB';'RORA';'KCNC1';'SYT2';'C4orf33';'RP4-695O20__B.1';'MAP3K6';'ZBED5';'SLC16A7';'JHDM1D';'CDS1';'FRAT1';'CACNA2D2';'LOC440459';'KIAA0240';'USP45';'TRPC3';'STAC2';'TRERF1';'PLXDC1';'TCTEX1D1';'DNAJC4';'ZDHHC2';'CPLX1';'AMMECR1';'FBXO33';'RG9MTD2';'PVALB';'SLC4A8';'ACAN';'LRCH1';'C9orf45';'EEPD1';'ANKS6';'ZYX';'BBS7';'SPAG4';'CAMK2G';'RMI1';'TMEM86B';'KIAA1456';'FAM71E1';'C6orf186';'MID2';'ARID2';'KLF12';'RAB37';'NR1D2';'IL28RA';'EPB41';'NCOA3';'LURAP1L';'SLC16A6';'ANKRD29';'LOC100131943';'RP11-403C10.2';'PAG1';'LUZP1';'THAP10';'TTC39B';'PPARGC1A';'RRM2B';'C16ORF52';'RELT';'IDI2';'LOC100286977';'ESRRG';'ST8SIA1';'CDR2L';'EYA4';'DUS1L';'HSPA4L';'INTS8';'RAD54B';'GPLD1';'DCBLD2';'AGPAT9';'GPR161';'MAP9';'SLC39A14';'UPP1';'GAS2';'MRGPRF';'TIFA';'ALDH1A3';'FGF9';'L2HGDH';'SCN1A';'KCNA1';'ABCA6';'BEND6';'JDP2';'NR3C2';'ASB13';'SCRT1';'PHYH';'EIF5A2';'A26C1B';'VAMP1';'SLC38A2';'ESRRA';'OSBPL6';'SCN1B';'C1orf133';'RP5-1022P6.1';'ANK1';'SEMA7A';'TTC21B';'ZBTB1';'RHBDL3';'DCUN1D2';'LOC100286909'};
SENDEP_CT_plus={'PTGER3';'FAM65B';'FAM71F1';'LY6H';'C1orf95';'GABRA5';'PPM1M';'SYT17';'BAIAP3';'IL13RA2';'CPNE6';'SLA';'CFD';'SCN3B';'ANKRD6';'BIRC3';'WNT10B';'MEIS3P2';'ATP2B4';'ASCL2';'PRKCD';'C6orf173';'GNG2';'KCNG1';'AC006273.1';'MMD';'CXorf57';'RAB27B';'SSTR1';'WDR66';'ZCCHC12';'RSPH9';'PKIA';'NECAB2';'PID1';'HTR1A';'GABRA3';'TNNT1';'ANXA8';'ZNF831';'FAM148C';'PPP4R4';'RILPL2';'ICAM5';'PNMT';'LOC100129291';'MSANTD1';'SCN9A';'RBP4';'KIAA1644';'KCTD4';'PEA15';'SMARCD3';'YPEL1';'LYRM2';'GRIN3A';'SNX7';'LRRC36';'TBC1D26';'ODZ3';'MAGED4B';'CPNE7';'GABRB1';'ARHGDIA';'AC044839.2';'AC092324.1';'KLF8';'RP4-788L13.1';'WDR86';'TMSB10';'B9D1';'RAB36';'TMEM200A';'F12';'GNG4';'DPYSL3';'GLOD4';'ZCCHC17';'SLC17A8';'FAM150B';'CPLX3';'TRIM36';'PTCHD1';'SST';'NUMBL';'PGM2L1';'EFCAB1';'KIF21B';'TMEM159';'LMO3';'GNB4';'LRRN2';'PYDC1';'LINC00260';'DAPL1';'DNAJC25-GNG10';'PRSS23';'GLRA2';'PLCB2';'GRIA1';'LINC00087';'HPCAL4';'AMIGO2';'CAMK2D';'ATOH7';'PACRG';'HRH1';'HTR2C';'PGRMC1';'TG';'GHR';'ISOC1';'C11orf66';'NKAIN4';'LARGE';'LOXL1';'GPC4';'ECHDC3';'RIMBP2';'DACH2';'IL1B';'PRKCG';'GLT8D2';'FAM171B';'DHDH';'PLXNC1';'NANOS1';'RNF150';'KLHDC8B';'DIRAS3';'LOC392145';'ZCCHC18';'RAVER2';'FKBP1A';'LOC643037';'AC024575.2';'MRAS';'WDR51A';'SLIT3';'MAPK1';'SULF2';'PCDH20';'KCNK2';'CMTM8';'COCH';'C12orf73';'NNAT';'GALNT14';'CORT';'SLC2A12';'LOC642852';'COG1';'FNBP1L';'PPM1N';'PTPRR';'TUSC3';'TCEA3';'SLC7A4';'OBFC2A';'SLC17A7';'LYPD1';'SLIT1';'FARP1';'PSORS1C1';'RRP7A';'CAMKV';'LOC100288911';'HRASLS';'SYNPR';'MYH7';'HBQ1';'LOC100131504';'SSTR2';'SUSD1';'C17orf108';'TMEFF2';'ADRB2';'DPF1';'CPAMD8';'SNCA';'TUBB2A';'NPY1R';'LOC100287347';'LRRC3B';'GPR88';'LUZP2';'FAM113B';'SYN2';'NUDT11';'RHBDD2';'CDH4';'PYGL';'GMFB';'RGS20';'AF205589.2';'CACNG3';'MAOB';'RAPGEF4';'DNAL4';'PCSK5';'HN1';'JAKMIP1';'UG0898H09';'SNCG';'CBLN1';'GDA';'AC093310.1';'AK3L1';'LOC729683';'BRE';'POLR2L';'RASAL1';'PDE2A';'HES4';'CTXN1';'PCDH17';'PTRH1';'BATF3';'NPY5R';'FILIP1';'DAK';'NOL4';'GABRB3';'SUB1';'CD24';'TMEM158';'RIPK2';'ACVR2A';'ARMCX2';'EIF4EBP1';'RRAGB';'MARCKS';'MACROD2';'CRIP2';'SEMA4A';'STX1A';'GPRIN1';'KIAA1239';'C16orf93';'C1R';'PNCK';'PRPH2';'LOC100288743';'CTD-2536I1.1';'THRA';'NPPA';'TUBB';'AKIRIN2';'SLC30A10';'ASXL3';'MGST1';'MR1';'STK32C';'LOC391722';'NKAIN3';'STYK1';'BZRAP1';'PLD6';'SLC16A2';'DOK6';'HPCA';'SCN3A';'GPD2';'PTHLH';'BFSP1';'GNPTAB';'PLAC9';'ARHGAP18';'FOXRED2';'HMGCS1';'RAP1GAP';'RALGPS2';'DRD5';'ANKRD50';'FAM102B';'PDGFC';'GRP';'RSPO3';'ARMCX1';'RAP2B';'A1BG';'LINC00086';'C2orf80';'C16orf55';'RASGEF1C';'PPEF1';'FAM19A1';'CCDC68';'RTBDN';'PTPRA';'SORBS2';'ZDHHC12';'KLK7';'CADM1';'RP4-725G10.1';'SKAP2';'MYCNOS';'C5orf49';'JUN';'FABP3';'LRP1B';'HES5';'FLRT1';'SLC1A4';'CNIH2';'LINC00152';'LOC339524';'NPY';'JPH4';'LOR';'POLE4';'CPNE5';'LOC728392';'IQCA1';'GABRA2';'C6orf1';'GNG10';'ACSL4';'FADS3';'C12orf23';'DHX58';'UCHL1';'ZNF642';'KCNMB4';'WNT4';'DACT1';'RYR3';'PLAC2';'ZNF436';'GOLM1';'GRIK2';'GABRE';'CSGALNACT1';'TP53I11';'YWHAZ';'AC069234.1';'DNAJA4';'FAM120AOS';'GP1BB';'DNAH14';'CAPZB';'PKIB';'FXYD6';'PYCRL';'UCHL3';'ITPRIPL2';'LARP1';'SEMA3D';'ANKRD43';'SMAD3';'C1QL1';'ROBO2';'FABP7';'RASL10A';'TLL1';'C1S';'SLC25A23';'MESP1';'LOC653051';'KCNN3';'LRRC56';'SLC29A4';'AC015936.3';'SCPEP1';'MRC1L1';'LOC100289600';'MYB';'VAV1';'FAM149A';'PDYN';'DLL3';'XKR4';'NEURL1B';'ENOX1';'PGAP1';'DDN';'DDAH2';'CALM3';'FAM26F';'RP11-544M22.1';'HCST';'EDN1';'CORO1A'};
%% INFLAMMATION from Dan
%neuroinflamm=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\inflammation\WP_NEUROINFLAMMATION.txt');neuroinflamm=neuroinflamm.WP_NEUROINFLAMMATION;
adaptive_inflamm=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\inflammation\WP_INFLAMMATORY_RESPONSE_PATHWAY.txt');adaptive_inflamm=adaptive_inflamm.WP_INFLAMMATORY_RESPONSE_PATHWAY;
neuroinflamm=readtable('D:\Canada_2020\SENDEP\reports\gene_ontology\round1_bilateral\inflammation\GO_NEUROINFLAMMATORY_RESPONSE.txt');neuroinflamm=neuroinflamm.GO_NEUROINFLAMMATORY_RESPONSE;
%also this one: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6218410/ saved in the inflammation folder
%% permutations with bootstrap 
%%%%    to figure out if the genes we're interested in 
%%%%    are contributing at higher than chance level

bootnum=250;
permutations=250;
dim=1;
ncomp=1;
    for n = 1:permutations
        n
    PLS1weights=[];
    PLS2weights=[];
    % selecting either next combination, or random permutation
    permutation_index = randperm(length(allobservations));
    % creating random sample based on permutation index
    randomSample = allobservations(permutation_index,:);
    % running the PLS for this permutation
    [XL,YL,XS,YS,BETA,PCTVAR,MSE,stats] = plsregress(X,randomSample,ncomp);
    PLS1w=stats.W(:,1);
        parfor i=1:bootnum
        i;
        myresample = randsample(size(X,1),size(X,1),1);
        res(i,:)=myresample; %store resampling out of interest
        Xr=X(myresample,:); % define X for resampled subjects
        Yr=randomSample(myresample,:); % define Y for resampled subjects
        [XL,YL,XS,YS,BETA,PCTVAR,MSE,stats]=plsregress(Xr,Yr,dim); %perform PLS for resampled data

        newW=stats.W(:,1);%extract PLS1 weights
        if corr(PLS1w,newW)<0 % the sign of PLS components is arbitrary - make sure this aligns between runs
            newW=-1*newW;
        end
        PLS1weights=[PLS1weights,newW];%store (ordered) weights from this bootstrap run
        end

        PLS1sw=std(PLS1weights');
        geneweights1=PLS1w./PLS1sw';
        geneweights1_perm(:,n)=geneweights1;
    end

figure; histogram(probes_with_weights.geneweights); ylim([0 1000]); hold on; yyaxis right
histogram(geneweights1_perm(:,:), 150); xlim([-10 10])
   %save('C:\Users\peter\Documents\GABA\previous_genes\perm_weights_subcort1.mat')
%% Howard/Gandal and permutation testing 
%Q: are the actual geneweights for Howard et al or Gandal et al higher than those obtained by permutation?
Howard=idxed_Gandal.exterl_gene_id(idxed_Gandal.MDD_FDR <0.05 & idxed_Gandal.MDD_beta_log2FC>0);
Howard=unique(d.gene_symbol); %(strcmp(d.MatchAcrossStudies_, 'TRUE'))
Howard=Liao_plus.PLS1_GeneNames(abs(Liao_plus.PLS1_GeneWeights)>5);
Howard=Liao_minus.PLS1_GeneNames(abs(Liao_minus.PLS1_GeneWeights)>5);
Howard=Anderson.genes(Anderson.include==2);% for positive correlations
Howard=Anderson.genes(Anderson.include==1);% for negative correlations
Howard=up_genes; Howard=down_genes;
Howard=neuroinflamm;
Howard=adaptive_inflamm;
Howard=Bellenguez_ADgenes;
Howard=UKB_minus;
Howard=SENDEP_CT_minus;

clear Howard_weight Howard_weight_random tmp tmp2
for i=1:length(Howard)
   if sum(strcmp(Howard{i}, probes_with_weights.symbol)) ==1
      Howard_weight(i)= mean(probes_with_weights.geneweights(strcmp(Howard(i), probes_with_weights.symbol)));
      Howard_weight_random(i,:)=geneweights1_perm(strcmp(Howard(i), probes_with_weights.symbol),:);
    else 
          Howard_weight(i)=99;
          Howard_weight_random(i,:)=99*ones(1,250);
   end
end
Howard_weight_random(Howard_weight==99,:)=[]; Howard_weight(Howard_weight==99)=[]; 

tmp=sum(abs(Howard_weight)>=3)/length(Howard_weight)
tmp2=sum(abs(Howard_weight_random)>=3)/length(Howard_weight); mean(tmp2)
1-sum(tmp>tmp2)/permutations


figure;histogram(tmp2)

%Q: is the AUC for the overall gene expression higher than expected by permutation?
%%%% testing both in one

colors={'r'}; hold off

load('C:\Users\peter\Documents\GABA\previous_genes\perm_weights_subcort5.mat', 'geneweights1_perm', 'probes_with_weights');
clear tmp tmp2
for i=1:length(Howard)
    tmp(i,:)=strcmp(Howard{i}, probes_with_weights.symbol);
end;    tmp2=(sum(tmp));
labels=logical(tmp2');labels=repmat(labels,1,250); scores=geneweights1_perm(:,:);
[auc,fpr,tpr] = fastAUC(labels,scores,0);

tmp2=(sum(tmp)); %figure; imagesc(tmp2(probes_with_weights.geneweights<0))
labels=logical(tmp2'); scores=probes_with_weights.geneweights;
[Rauc,Rfpr,Rtpr] = fastAUC(labels,scores,0); auc_all(1)=Rauc;
figure; 
plot(fpr,tpr,  'LineWidth',0.5, 'Color',[0.8,0.8,0.8]);
hold on; plot(Rfpr,Rtpr, colors{1}, 'LineWidth',1.5); 
p_auc=sum(Rauc>auc)/permutations

